- name: create ec2 user and route53
  hosts: local
  connection: local
  vars: 
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0d9724b44c97a6c47
    zone_id: Z06190873R7XMZC2PKDSV
    domain: daws86s-akhil.shop
    # instances:
    # - mongodb
    # - redis
    # - mysql
    # - rabbitmq
  tasks:
  - name: create ec2 user
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t2.micro 
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        Name: MongoDB 
    loop: "{{ instances }}"
    register: ec2_output 

  # - name: print public ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].public_ip_address}}"
  #   loop: "{{ ec2_output.results }}"

  # - name: print public ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].private_ip_address}}"
  #   loop: "{{ ec2_output.results }}"
  
  - name: create route53 and update record 
    amazon.aws.route53:
      state: present
      zone: "{{ domain }}"
      record: "{{ item.item }}.{{ domain }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address}}"
      overwrite: true
    loop: "{{ ec2_output.results }}"

  - name: create route53 and update record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain }}"
      record: "{{ domain }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address}}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"